version: 2.2
orbs: # adds orbs to your configuration
  jira: circleci/jira@1.3.1 # invokes the Jira orb, making its commands accessible

jobs:
  build_and_test:
    docker:
    - image: cimg/node:13.11.0
    steps:
    - add_ssh_keys:
        fingerprints: 
        - "14:93:0f:de:f3:d1:02:c5:e1:0a:0a:d4:83:82:69:0e"
    - run:
      name: SSH Disable Host Key Checking
      command: |
        echo "StrictHostKeyChecking=no">> ~/.ssh/config    
    - checkout
    - run:
        command: |
          chmod 755 .circleci/deploy.sh
          if [ ! -f "package.json" ]; then
            echo
            echo "---"
            echo "Unable to find your package.json file. Did you forget to set the app-dir parameter?"
            echo "---"
            echo "Current directory: $(pwd)"
            echo
            echo "List directory: "
            ls
            exit 1
          fi
        name: Checking for package.json.
        working_directory: ~/project
    - restore_cache:
        keys:
        - node-deps-v1-{{ .Branch }}-{{ checksum "~/project/package-lock.json" }}
    - run:
        command: "if [[ ! -z \"\" ]]; then\n  echo \"Running override package installation command:\"\n  \nelse\n  npm ci\nfi\n"
        name: Installing NPM packages
        working_directory: ~/project
    - save_cache:
        key: node-deps-v1-{{ .Branch }}-{{ checksum "~/project/package-lock.json" }}
        paths:
        - ~/.npm
    - run:
        command: npm run test
        name: Run NPM Tests
        working_directory: ~/project
    - run:
        name: DEV
        command: export NODE_ENV=development
    - run:
        name: Installing NPM packages
        command: "if [[ ! -z \"\" ]]; then\n  echo \"Running override package installation command:\"\n  \nelse\n  npm ci\nfi\n"
        working_directory: ~/project
    # - run:
    #     name: Deploy
    #     command: ./.circleci/deploy.sh
  
  deploy-job:
    - run:
      name: DEV
      command: |-
          echo "============================================ Run Configs ============================================"
          export SSH_USER=<< parameters.ssh-user >>
          export SSH_HOST=<< parameters.ssh-host >>
          export GIT_USER=<< parameters.git-user >>
          export GIT_REPO=<< parameters.git-repo >>
          export GIT_BRANCH=<< parameters.git-branch >>
          echo git_user         : ${GIT_USER}
          echo git_repo         : ${GIT_REPO}
          echo git_branch       : ${GIT_BRANCH}
          echo SSH_USER         : ${SSH_USER}
          echo SSH_HOST         : ${SSH_HOST}
          echo "====================================================================================================="
          echo "Running new Container..."
          ssh -o "StrictHostKeyChecking no" ${SSH_USER}@${SSH_HOST} \<<- EOF
            bash -c "git pull"
          EOF      
    

workflows:
  version: 2

  node-tests:
    jobs:
      - build_and_test:
          context: development

      - deploy-job:
          requires:
            - build_and_test
          filters:
            branches:
              only: master        
  

# Original config.yml file:
# version: 2.1
# orbs:
#   node: circleci/node@3.0.0
# workflows:
#   node-tests:
#     jobs:
#       - node/test